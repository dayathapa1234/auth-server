[
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.nimbusds.jose.jwk.source.JWKSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.nuvesta.auth_server.AuthServerApplication",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "filterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity"
        ]
      },
      {
        "name": "passwordEncoder",
        "parameterTypes": [ ]
      },
      {
        "name": "userDetailsService",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.nuvesta.auth_server.AuthServerApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.nuvesta.auth_server.AuthServerApplication$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.nuvesta.auth_server.AuthServerApplication$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.nuvesta.auth_server.AuthServerApplication__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.nuvesta.auth_server.AuthServerApplication"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.nuvesta.auth_server.controller.AuthController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "ping",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "fields": [
      {
        "name": "catalog"
      },
      {
        "name": "connectionInitSql"
      },
      {
        "name": "connectionTestQuery"
      },
      {
        "name": "connectionTimeout"
      },
      {
        "name": "credentials"
      },
      {
        "name": "dataSource"
      },
      {
        "name": "dataSourceClassName"
      },
      {
        "name": "dataSourceProperties"
      },
      {
        "name": "driverClassName"
      },
      {
        "name": "exceptionOverride"
      },
      {
        "name": "exceptionOverrideClassName"
      },
      {
        "name": "healthCheckProperties"
      },
      {
        "name": "healthCheckRegistry"
      },
      {
        "name": "idleTimeout"
      },
      {
        "name": "initializationFailTimeout"
      },
      {
        "name": "jdbcUrl"
      },
      {
        "name": "keepaliveTime"
      },
      {
        "name": "leakDetectionThreshold"
      },
      {
        "name": "maxLifetime"
      },
      {
        "name": "metricRegistry"
      },
      {
        "name": "metricsTrackerFactory"
      },
      {
        "name": "poolName"
      },
      {
        "name": "scheduledExecutor"
      },
      {
        "name": "schema"
      },
      {
        "name": "threadFactory"
      },
      {
        "name": "validationTimeout"
      }
    ],
    "methods": [
      {
        "name": "getCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSource",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getExceptionOverride",
        "parameterTypes": [ ]
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolName",
        "parameterTypes": [ ]
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": [ ]
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": [ ]
      },
      {
        "name": "isReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCredentials",
        "parameterTypes": [
          "com.zaxxer.hikari.util.Credentials"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverride",
        "parameterTypes": [
          "com.zaxxer.hikari.SQLExceptionOverride"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "pool"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "close",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikariConfigMXBean",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikariPoolMXBean",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogWriter",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentLogger",
        "parameterTypes": [ ]
      },
      {
        "name": "isClosed",
        "parameterTypes": [ ]
      },
      {
        "name": "isRunning",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      }
    ]
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.persistence.EntityManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.EntityManagerFactory",
    "condition": {
      "typeReachable": "org.springframework.orm.jpa.SharedEntityManagerCreator"
    },
    "methods": [
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetamodel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.persistence.NamedEntityGraph",
    "condition": {
      "typeReachable": "org.springframework.data.jpa.repository.EntityGraph"
    },
    "allPublicMethods": true
  },
  {
    "name": "jakarta.persistence.Query",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getResultStream",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Closeable",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Iterable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.net.http.HttpClient",
    "condition": {
      "typeReachable": "java.net.http.HttpClient"
    }
  },
  {
    "name": "java.net.InetAddress",
    "allPublicClasses": true
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true,
    "allPublicClasses": true
  },
  {
    "name": "java.net.URL",
    "allPublicClasses": true
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Timestamp",
    "condition": {
      "typeReachable": "java.sql.Timestamp"
    },
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "java.time.Instant"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.concurrent.ThreadFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.EventListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Map",
    "allPublicClasses": true
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "java.util.UUID",
    "allPublicClasses": true
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.query.sqm.tree.select.SqmQueryPart[]",
    "unsafeAllocated": true
  },
  {
    "name": "org.hibernate.service.jta.platform.internal.NoJtaPlatform",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.postgresql.ds.PGSimpleDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.postgresql.geometric.PGbox",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.geometric.PGcircle",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.geometric.PGline",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.geometric.PGlseg",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.geometric.PGpath",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.geometric.PGpoint",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.geometric.PGpolygon",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.jdbc.TypeInfoCache",
    "allPublicClasses": true
  },
  {
    "name": "org.postgresql.util.PGobject",
    "allPublicClasses": true
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.BeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationProperties",
    "fields": [
      {
        "name": "allowBeanDefinitionOverriding"
      },
      {
        "name": "allowCircularReferences"
      },
      {
        "name": "bannerMode"
      },
      {
        "name": "keepAlive"
      },
      {
        "name": "lazyInitialization"
      },
      {
        "name": "logStartupInfo"
      },
      {
        "name": "registerShutdownHook"
      },
      {
        "name": "sources"
      },
      {
        "name": "webApplicationType"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowBeanDefinitionOverriding",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCircularReferences",
        "parameterTypes": [ ]
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isLazyInitialization",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogStartupInfo",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterShutdownHook",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "timeoutPerShutdownPhase"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "dialect"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.jdbc.JdbcDatabaseDialect"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$JdbcRepositoriesConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration$SpringBootJdbcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.data.jdbc.JdbcDataProperties"
        ]
      },
      {
        "name": "dataAccessStrategyBean",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
          "org.springframework.data.jdbc.core.convert.JdbcConverter",
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.data.relational.core.dialect.Dialect"
        ]
      },
      {
        "name": "jdbcAggregateTemplate",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.data.jdbc.core.convert.JdbcConverter",
          "org.springframework.data.jdbc.core.convert.DataAccessStrategy"
        ]
      },
      {
        "name": "jdbcConverter",
        "parameterTypes": [
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
          "org.springframework.data.jdbc.core.convert.RelationResolver",
          "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
          "org.springframework.data.relational.core.dialect.Dialect"
        ]
      },
      {
        "name": "jdbcCustomConversions",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcDialect",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations"
        ]
      },
      {
        "name": "jdbcMappingContext",
        "parameterTypes": [
          "java.util.Optional",
          "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
          "org.springframework.data.relational.RelationalManagedTypes"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "springDataWebSettings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "pageable"
      },
      {
        "name": "sort"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "fields": [
      {
        "name": "defaultPageSize"
      },
      {
        "name": "maxPageSize"
      },
      {
        "name": "oneIndexedParameters"
      },
      {
        "name": "pageParameter"
      },
      {
        "name": "prefix"
      },
      {
        "name": "qualifierDelimiter"
      },
      {
        "name": "serializationMode"
      },
      {
        "name": "sizeParameter"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getQualifierDelimiter",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerializationMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getSizeParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "isOneIndexedParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSerializationMode",
        "parameterTypes": [
          "org.springframework.data.web.config.EnableSpringDataWebSupport$PageSerializationMode"
        ]
      },
      {
        "name": "setSizeParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "fields": [
      {
        "name": "sortParameter"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSortParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties",
    "fields": [
      {
        "name": "connectTimeout"
      },
      {
        "name": "readTimeout"
      },
      {
        "name": "redirects"
      },
      {
        "name": "ssl"
      }
    ],
    "methods": [
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRedirects",
        "parameterTypes": [
          "org.springframework.boot.http.client.HttpRedirects"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpClientProperties$Ssl",
    "fields": [
      {
        "name": "bundle"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties",
    "fields": [
      {
        "name": "factory"
      }
    ],
    "methods": [
      {
        "name": "getFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "setFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.http.client.AbstractHttpRequestFactoryProperties$Factory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.http.client.HttpClientProperties"
        ]
      },
      {
        "name": "clientHttpRequestFactoryBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "clientHttpRequestFactorySettings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.client.HttpClientProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "build"
      },
      {
        "name": "git"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "fields": [
      {
        "name": "encoding"
      },
      {
        "name": "location"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "fields": [
      {
        "name": "encoding"
      },
      {
        "name": "location"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "constructorDetector"
      },
      {
        "name": "datatype"
      },
      {
        "name": "dateFormat"
      },
      {
        "name": "defaultLeniency"
      },
      {
        "name": "defaultPropertyInclusion"
      },
      {
        "name": "deserialization"
      },
      {
        "name": "generator"
      },
      {
        "name": "locale"
      },
      {
        "name": "mapper"
      },
      {
        "name": "parser"
      },
      {
        "name": "propertyNamingStrategy"
      },
      {
        "name": "serialization"
      },
      {
        "name": "timeZone"
      },
      {
        "name": "visibility"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatatype",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
    "fields": [
      {
        "name": "jsonNode"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnum",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsonNode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
          "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "jdbcConnectionDetailsHikariBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "classLoader"
      },
      {
        "name": "driverClassName"
      },
      {
        "name": "embeddedDatabaseConnection"
      },
      {
        "name": "generateUniqueName"
      },
      {
        "name": "jndiName"
      },
      {
        "name": "name"
      },
      {
        "name": "password"
      },
      {
        "name": "type"
      },
      {
        "name": "url"
      },
      {
        "name": "username"
      },
      {
        "name": "xa"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getXa",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "fields": [
      {
        "name": "dataSourceClassName"
      },
      {
        "name": "properties"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariJdbcConnectionDetailsBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "template"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "fields": [
      {
        "name": "fetchSize"
      },
      {
        "name": "ignoreWarnings"
      },
      {
        "name": "maxRows"
      },
      {
        "name": "queryTimeout"
      },
      {
        "name": "resultsMapCaseInsensitive"
      },
      {
        "name": "skipResultsProcessing"
      },
      {
        "name": "skipUndeclaredResults"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRows",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isIgnoreWarnings",
        "parameterTypes": [ ]
      },
      {
        "name": "isResultsMapCaseInsensitive",
        "parameterTypes": [ ]
      },
      {
        "name": "isSkipResultsProcessing",
        "parameterTypes": [ ]
      },
      {
        "name": "isSkipUndeclaredResults",
        "parameterTypes": [ ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIgnoreWarnings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setResultsMapCaseInsensitive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSkipResultsProcessing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSkipUndeclaredResults",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.JaxbNotAvailableExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "ddlAuto"
      },
      {
        "name": "naming"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDdlAuto",
        "parameterTypes": [ ]
      },
      {
        "name": "getNaming",
        "parameterTypes": [ ]
      },
      {
        "name": "setDdlAuto",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$Naming",
    "fields": [
      {
        "name": "implicitStrategy"
      },
      {
        "name": "physicalStrategy"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getImplicitStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPhysicalStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setImplicitStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhysicalStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "queriedMethods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
          "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties"
        ]
      },
      {
        "name": "openEntityManagerInViewInterceptor",
        "parameterTypes": [ ]
      },
      {
        "name": "openEntityManagerInViewInterceptorConfigurer",
        "parameterTypes": [
          "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$PersistenceManagedTypesConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "database"
      },
      {
        "name": "databasePlatform"
      },
      {
        "name": "generateDdl"
      },
      {
        "name": "mappingResources"
      },
      {
        "name": "openInView"
      },
      {
        "name": "properties"
      },
      {
        "name": "showSql"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabasePlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappingResources",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpenInView",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateDdl",
        "parameterTypes": [ ]
      },
      {
        "name": "isShowSql",
        "parameterTypes": [ ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOpenInView",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2ClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "jwt"
      },
      {
        "name": "opaquetoken"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJwt",
        "parameterTypes": [ ]
      },
      {
        "name": "getOpaquetoken",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt",
    "fields": [
      {
        "name": "audiences"
      },
      {
        "name": "authoritiesClaimDelimiter"
      },
      {
        "name": "authoritiesClaimName"
      },
      {
        "name": "authorityPrefix"
      },
      {
        "name": "issuerUri"
      },
      {
        "name": "jwkSetUri"
      },
      {
        "name": "jwsAlgorithms"
      },
      {
        "name": "principalClaimName"
      },
      {
        "name": "publicKeyLocation"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAudiences",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthoritiesClaimDelimiter",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthoritiesClaimName",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthorityPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getIssuerUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getJwkSetUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getJwsAlgorithms",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrincipalClaimName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPublicKeyLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setAudiences",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuthoritiesClaimDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthoritiesClaimName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthorityPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIssuerUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJwkSetUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJwsAlgorithms",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPrincipalClaimName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicKeyLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken",
    "fields": [
      {
        "name": "clientId"
      },
      {
        "name": "clientSecret"
      },
      {
        "name": "introspectionUri"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "getIntrospectionUri",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIntrospectionUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$JwtConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$OpaqueTokenConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerJwtConfiguration$JwtDecoderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties"
        ]
      },
      {
        "name": "authorizationServerSettings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerJwtAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jwkSource",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerJwtAutoConfiguration$JwtDecoderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jwtDecoder",
        "parameterTypes": [
          "com.nimbusds.jose.jwk.source.JWKSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "client"
      },
      {
        "name": "endpoint"
      },
      {
        "name": "issuer"
      },
      {
        "name": "multipleIssuersAllowed"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClient",
        "parameterTypes": [ ]
      },
      {
        "name": "getEndpoint",
        "parameterTypes": [ ]
      },
      {
        "name": "getIssuer",
        "parameterTypes": [ ]
      },
      {
        "name": "isMultipleIssuersAllowed",
        "parameterTypes": [ ]
      },
      {
        "name": "setIssuer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMultipleIssuersAllowed",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties$Client",
    "fields": [
      {
        "name": "jwkSetUri"
      },
      {
        "name": "registration"
      },
      {
        "name": "requireAuthorizationConsent"
      },
      {
        "name": "requireProofKey"
      },
      {
        "name": "token"
      },
      {
        "name": "tokenEndpointAuthenticationSigningAlgorithm"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJwkSetUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistration",
        "parameterTypes": [ ]
      },
      {
        "name": "getToken",
        "parameterTypes": [ ]
      },
      {
        "name": "getTokenEndpointAuthenticationSigningAlgorithm",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequireAuthorizationConsent",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequireProofKey",
        "parameterTypes": [ ]
      },
      {
        "name": "setJwkSetUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequireAuthorizationConsent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequireProofKey",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTokenEndpointAuthenticationSigningAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties$Endpoint",
    "fields": [
      {
        "name": "authorizationUri"
      },
      {
        "name": "deviceAuthorizationUri"
      },
      {
        "name": "deviceVerificationUri"
      },
      {
        "name": "jwkSetUri"
      },
      {
        "name": "oidc"
      },
      {
        "name": "tokenIntrospectionUri"
      },
      {
        "name": "tokenRevocationUri"
      },
      {
        "name": "tokenUri"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthorizationUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeviceAuthorizationUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeviceVerificationUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getJwkSetUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getOidc",
        "parameterTypes": [ ]
      },
      {
        "name": "getTokenIntrospectionUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getTokenRevocationUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getTokenUri",
        "parameterTypes": [ ]
      },
      {
        "name": "setAuthorizationUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceAuthorizationUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceVerificationUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJwkSetUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenIntrospectionUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenRevocationUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties$OidcEndpoint",
    "fields": [
      {
        "name": "clientRegistrationUri"
      },
      {
        "name": "logoutUri"
      },
      {
        "name": "userInfoUri"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientRegistrationUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogoutUri",
        "parameterTypes": [ ]
      },
      {
        "name": "getUserInfoUri",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientRegistrationUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserInfoUri",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties$Registration",
    "fields": [
      {
        "name": "authorizationGrantTypes"
      },
      {
        "name": "clientAuthenticationMethods"
      },
      {
        "name": "clientId"
      },
      {
        "name": "clientName"
      },
      {
        "name": "clientSecret"
      },
      {
        "name": "postLogoutRedirectUris"
      },
      {
        "name": "redirectUris"
      },
      {
        "name": "scopes"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthorizationGrantTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuthenticationMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientId",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientName",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "getPostLogoutRedirectUris",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectUris",
        "parameterTypes": [ ]
      },
      {
        "name": "getScopes",
        "parameterTypes": [ ]
      },
      {
        "name": "setAuthorizationGrantTypes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setClientAuthenticationMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPostLogoutRedirectUris",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRedirectUris",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setScopes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerProperties$Token",
    "fields": [
      {
        "name": "accessTokenFormat"
      },
      {
        "name": "accessTokenTimeToLive"
      },
      {
        "name": "authorizationCodeTimeToLive"
      },
      {
        "name": "deviceCodeTimeToLive"
      },
      {
        "name": "idTokenSignatureAlgorithm"
      },
      {
        "name": "refreshTokenTimeToLive"
      },
      {
        "name": "reuseRefreshTokens"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessTokenFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessTokenTimeToLive",
        "parameterTypes": [ ]
      },
      {
        "name": "getAuthorizationCodeTimeToLive",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeviceCodeTimeToLive",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdTokenSignatureAlgorithm",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefreshTokenTimeToLive",
        "parameterTypes": [ ]
      },
      {
        "name": "isReuseRefreshTokens",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessTokenFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAccessTokenTimeToLive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAuthorizationCodeTimeToLive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDeviceCodeTimeToLive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setIdTokenSignatureAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshTokenTimeToLive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setReuseRefreshTokens",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "filter"
      },
      {
        "name": "user"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "getUser",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
    "fields": [
      {
        "name": "dispatcherTypes"
      },
      {
        "name": "order"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDispatcherTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
    "fields": [
      {
        "name": "name"
      },
      {
        "name": "password"
      },
      {
        "name": "passwordGenerated"
      },
      {
        "name": "roles"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "isPasswordGenerated",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "securityFilterChainRegistration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.SecurityProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration$WebSecurityEnablerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "continueOnError"
      },
      {
        "name": "dataLocations"
      },
      {
        "name": "encoding"
      },
      {
        "name": "mode"
      },
      {
        "name": "password"
      },
      {
        "name": "platform"
      },
      {
        "name": "schemaLocations"
      },
      {
        "name": "separator"
      },
      {
        "name": "username"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
    "fields": [
      {
        "name": "keystore"
      },
      {
        "name": "truststore"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
    "fields": [
      {
        "name": "location"
      },
      {
        "name": "password"
      },
      {
        "name": "provider"
      },
      {
        "name": "type"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
    "fields": [
      {
        "name": "keystore"
      },
      {
        "name": "truststore"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
    "fields": [
      {
        "name": "certificate"
      },
      {
        "name": "privateKey"
      },
      {
        "name": "privateKeyPassword"
      },
      {
        "name": "type"
      },
      {
        "name": "verifyKeys"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isVerifyKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyKeys",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
    "fields": [
      {
        "name": "key"
      },
      {
        "name": "options"
      },
      {
        "name": "protocol"
      },
      {
        "name": "reloadOnUpdate"
      }
    ],
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "isReloadOnUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReloadOnUpdate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
    "fields": [
      {
        "name": "alias"
      },
      {
        "name": "password"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
    "fields": [
      {
        "name": "ciphers"
      },
      {
        "name": "enabledProtocols"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "bundle"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
    "fields": [
      {
        "name": "jks"
      },
      {
        "name": "pem"
      },
      {
        "name": "watch"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJks",
        "parameterTypes": [ ]
      },
      {
        "name": "getPem",
        "parameterTypes": [ ]
      },
      {
        "name": "getWatch",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
    "fields": [
      {
        "name": "file"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
    "fields": [
      {
        "name": "quietPeriod"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getQuietPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "mode"
      },
      {
        "name": "pool"
      },
      {
        "name": "shutdown"
      },
      {
        "name": "simple"
      },
      {
        "name": "threadNamePrefix"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Mode"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "fields": [
      {
        "name": "allowCoreThreadTimeout"
      },
      {
        "name": "coreSize"
      },
      {
        "name": "keepAlive"
      },
      {
        "name": "maxSize"
      },
      {
        "name": "queueCapacity"
      },
      {
        "name": "shutdown"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown",
    "fields": [
      {
        "name": "acceptTasksAfterContextClose"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isAcceptTasksAfterContextClose",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptTasksAfterContextClose",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "fields": [
      {
        "name": "awaitTermination"
      },
      {
        "name": "awaitTerminationPeriod"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
    "fields": [
      {
        "name": "concurrencyLimit"
      },
      {
        "name": "rejectTasksWhenLimitReached"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "isRejectTasksWhenLimitReached",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRejectTasksWhenLimitReached",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$AsyncConfigurerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationTaskExecutorAsyncConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$BootstrapExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "bootstrapExecutorAliasPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationTaskExecutor",
        "parameterTypes": [
          "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "pool"
      },
      {
        "name": "shutdown"
      },
      {
        "name": "simple"
      },
      {
        "name": "threadNamePrefix"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "fields": [
      {
        "name": "size"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "fields": [
      {
        "name": "awaitTermination"
      },
      {
        "name": "awaitTerminationPeriod"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
    "fields": [
      {
        "name": "concurrencyLimit"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "defaultTimeout"
      },
      {
        "name": "rollbackOnCommitFailure"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpMessageConvertersRestClientCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"
        ]
      },
      {
        "name": "restClientBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientSsl",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.TomcatWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "fields": [
      {
        "name": "includeBindingErrors"
      },
      {
        "name": "includeException"
      },
      {
        "name": "includeMessage"
      },
      {
        "name": "includePath"
      },
      {
        "name": "includeStacktrace"
      },
      {
        "name": "path"
      },
      {
        "name": "whitelabel"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludePath",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "fields": [
      {
        "name": "enabled"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "address"
      },
      {
        "name": "compression"
      },
      {
        "name": "error"
      },
      {
        "name": "forwardHeadersStrategy"
      },
      {
        "name": "http2"
      },
      {
        "name": "jetty"
      },
      {
        "name": "maxHttpRequestHeaderSize"
      },
      {
        "name": "mimeMappings"
      },
      {
        "name": "netty"
      },
      {
        "name": "port"
      },
      {
        "name": "reactive"
      },
      {
        "name": "serverHeader"
      },
      {
        "name": "servlet"
      },
      {
        "name": "shutdown"
      },
      {
        "name": "ssl"
      },
      {
        "name": "tomcat"
      },
      {
        "name": "undertow"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMimeMappings",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "fields": [
      {
        "name": "accesslog"
      },
      {
        "name": "connectionIdleTimeout"
      },
      {
        "name": "maxConnections"
      },
      {
        "name": "maxFormKeys"
      },
      {
        "name": "maxHttpFormPostSize"
      },
      {
        "name": "maxHttpResponseHeaderSize"
      },
      {
        "name": "threads"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFormKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxFormKeys",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "fields": [
      {
        "name": "append"
      },
      {
        "name": "customFormat"
      },
      {
        "name": "enabled"
      },
      {
        "name": "fileDateFormat"
      },
      {
        "name": "filename"
      },
      {
        "name": "format"
      },
      {
        "name": "ignorePaths"
      },
      {
        "name": "retentionPeriod"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$Format"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "fields": [
      {
        "name": "acceptors"
      },
      {
        "name": "idleTimeout"
      },
      {
        "name": "max"
      },
      {
        "name": "maxQueueCapacity"
      },
      {
        "name": "min"
      },
      {
        "name": "selectors"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "fields": [
      {
        "name": "connectionTimeout"
      },
      {
        "name": "h2cMaxContentLength"
      },
      {
        "name": "idleTimeout"
      },
      {
        "name": "initialBufferSize"
      },
      {
        "name": "maxInitialLineLength"
      },
      {
        "name": "maxKeepAliveRequests"
      },
      {
        "name": "validateHeaders"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "fields": [
      {
        "name": "session"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "fields": [
      {
        "name": "cookie"
      },
      {
        "name": "maxSessions"
      },
      {
        "name": "timeout"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSessions",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxSessions",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "fields": [
      {
        "name": "applicationDisplayName"
      },
      {
        "name": "contextParameters"
      },
      {
        "name": "contextPath"
      },
      {
        "name": "encoding"
      },
      {
        "name": "jsp"
      },
      {
        "name": "registerDefaultServlet"
      },
      {
        "name": "session"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "fields": [
      {
        "name": "acceptCount"
      },
      {
        "name": "accesslog"
      },
      {
        "name": "additionalTldSkipPatterns"
      },
      {
        "name": "backgroundProcessorDelay"
      },
      {
        "name": "basedir"
      },
      {
        "name": "connectionTimeout"
      },
      {
        "name": "keepAliveTimeout"
      },
      {
        "name": "maxConnections"
      },
      {
        "name": "maxHttpFormPostSize"
      },
      {
        "name": "maxHttpResponseHeaderSize"
      },
      {
        "name": "maxKeepAliveRequests"
      },
      {
        "name": "maxParameterCount"
      },
      {
        "name": "maxPartCount"
      },
      {
        "name": "maxPartHeaderSize"
      },
      {
        "name": "maxSwallowSize"
      },
      {
        "name": "mbeanregistry"
      },
      {
        "name": "processorCache"
      },
      {
        "name": "redirectContextRoot"
      },
      {
        "name": "relaxedPathChars"
      },
      {
        "name": "relaxedQueryChars"
      },
      {
        "name": "remoteip"
      },
      {
        "name": "resource"
      },
      {
        "name": "threads"
      },
      {
        "name": "uriEncoding"
      },
      {
        "name": "useApr"
      },
      {
        "name": "useRelativeRedirects"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxParameterCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPartCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPartHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseApr",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxParameterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPartCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPartHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setUseApr",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$UseApr"
        ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "fields": [
      {
        "name": "buffered"
      },
      {
        "name": "checkExists"
      },
      {
        "name": "conditionIf"
      },
      {
        "name": "conditionUnless"
      },
      {
        "name": "directory"
      },
      {
        "name": "enabled"
      },
      {
        "name": "encoding"
      },
      {
        "name": "fileDateFormat"
      },
      {
        "name": "ipv6Canonical"
      },
      {
        "name": "locale"
      },
      {
        "name": "maxDays"
      },
      {
        "name": "pattern"
      },
      {
        "name": "prefix"
      },
      {
        "name": "renameOnRotate"
      },
      {
        "name": "requestAttributesEnabled"
      },
      {
        "name": "rotate"
      },
      {
        "name": "suffix"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "fields": [
      {
        "name": "enabled"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "fields": [
      {
        "name": "hostHeader"
      },
      {
        "name": "internalProxies"
      },
      {
        "name": "portHeader"
      },
      {
        "name": "protocolHeader"
      },
      {
        "name": "protocolHeaderHttpsValue"
      },
      {
        "name": "remoteIpHeader"
      },
      {
        "name": "trustedProxies"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "fields": [
      {
        "name": "allowCaching"
      },
      {
        "name": "cacheTtl"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "fields": [
      {
        "name": "max"
      },
      {
        "name": "maxQueueCapacity"
      },
      {
        "name": "minSpare"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "fields": [
      {
        "name": "accesslog"
      },
      {
        "name": "allowEncodedSlash"
      },
      {
        "name": "alwaysSetKeepAlive"
      },
      {
        "name": "bufferSize"
      },
      {
        "name": "decodeSlash"
      },
      {
        "name": "decodeUrl"
      },
      {
        "name": "directBuffers"
      },
      {
        "name": "eagerFilterInit"
      },
      {
        "name": "maxCookies"
      },
      {
        "name": "maxHeaders"
      },
      {
        "name": "maxHttpPostSize"
      },
      {
        "name": "maxParameters"
      },
      {
        "name": "noRequestTimeout"
      },
      {
        "name": "options"
      },
      {
        "name": "preservePathOnForward"
      },
      {
        "name": "threads"
      },
      {
        "name": "urlCharset"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "fields": [
      {
        "name": "dir"
      },
      {
        "name": "enabled"
      },
      {
        "name": "pattern"
      },
      {
        "name": "prefix"
      },
      {
        "name": "rotate"
      },
      {
        "name": "suffix"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "fields": [
      {
        "name": "server"
      },
      {
        "name": "socket"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "fields": [
      {
        "name": "io"
      },
      {
        "name": "worker"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "error",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "errorHtml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "mediaTypeNotAcceptable",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "beanNameViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultErrorView",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": [ ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "enabled"
      },
      {
        "name": "fileSizeThreshold"
      },
      {
        "name": "location"
      },
      {
        "name": "maxFileSize"
      },
      {
        "name": "maxRequestSize"
      },
      {
        "name": "resolveLazily"
      },
      {
        "name": "strictServletCompliance"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": [ ]
      },
      {
        "name": "isStrictServletCompliance",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStrictServletCompliance",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "tomcatServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "tomcatServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "formContentFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": [ ]
      },
      {
        "name": "localeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": [ ]
      },
      {
        "name": "welcomePageHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "welcomePageNotAcceptableHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "defaultViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "requestContextFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "async"
      },
      {
        "name": "contentnegotiation"
      },
      {
        "name": "dispatchOptionsRequest"
      },
      {
        "name": "dispatchTraceRequest"
      },
      {
        "name": "format"
      },
      {
        "name": "logRequestDetails"
      },
      {
        "name": "logResolvedException"
      },
      {
        "name": "messageCodesResolverFormat"
      },
      {
        "name": "pathmatch"
      },
      {
        "name": "problemdetails"
      },
      {
        "name": "publishRequestHandledEvents"
      },
      {
        "name": "servlet"
      },
      {
        "name": "staticPathPattern"
      },
      {
        "name": "view"
      },
      {
        "name": "webjarsPathPattern"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getView",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": [ ]
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "fields": [
      {
        "name": "requestTimeout"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "fields": [
      {
        "name": "defaultContentTypes"
      },
      {
        "name": "favorParameter"
      },
      {
        "name": "mediaTypes"
      },
      {
        "name": "parameterName"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultContentTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultContentTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "fields": [
      {
        "name": "date"
      },
      {
        "name": "dateTime"
      },
      {
        "name": "time"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "fields": [
      {
        "name": "matchingStrategy"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "fields": [
      {
        "name": "enabled"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "fields": [
      {
        "name": "loadOnStartup"
      },
      {
        "name": "path"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "fields": [
      {
        "name": "prefix"
      },
      {
        "name": "suffix"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "locale"
      },
      {
        "name": "localeResolver"
      },
      {
        "name": "resources"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "fields": [
      {
        "name": "addMappings"
      },
      {
        "name": "cache"
      },
      {
        "name": "chain"
      },
      {
        "name": "staticLocations"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "fields": [
      {
        "name": "cachecontrol"
      },
      {
        "name": "period"
      },
      {
        "name": "useLastModified"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "fields": [
      {
        "name": "cachePrivate"
      },
      {
        "name": "cachePublic"
      },
      {
        "name": "maxAge"
      },
      {
        "name": "mustRevalidate"
      },
      {
        "name": "noCache"
      },
      {
        "name": "noStore"
      },
      {
        "name": "noTransform"
      },
      {
        "name": "proxyRevalidate"
      },
      {
        "name": "staleIfError"
      },
      {
        "name": "staleWhileRevalidate"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "fields": [
      {
        "name": "cache"
      },
      {
        "name": "compressed"
      },
      {
        "name": "enabled"
      },
      {
        "name": "strategy"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "fields": [
      {
        "name": "content"
      },
      {
        "name": "fixed"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "fields": [
      {
        "name": "enabled"
      },
      {
        "name": "paths"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "fields": [
      {
        "name": "enabled"
      },
      {
        "name": "paths"
      },
      {
        "name": "version"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.TomcatWebSocketServletWebServerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.SystemEnvironmentConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactoryBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.http.client.ClientHttpRequestFactorySettings",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.io.ApplicationResourceLoader$FilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.Base64ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.ClassPathResourceFilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.CorrelationIdConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.structured.ElasticCommonSchemaProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.structured.ElasticCommonSchemaProperties$Service"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.ElasticCommonSchemaProperties$Service",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.GraylogExtendedLogFormatProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.logging.structured.GraylogExtendedLogFormatProperties$Service"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.GraylogExtendedLogFormatProperties$Service",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Set",
          "java.util.Map",
          "java.util.Map",
          "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties$StackTrace",
          "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties$Context",
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties$Context",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties$StackTrace",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.logging.structured.StructuredLoggingJsonProperties$StackTrace$Root",
          "java.lang.Integer",
          "java.lang.Integer",
          "java.lang.Boolean",
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConfigurableTomcatWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.FilteredReactiveWebContextResourceFilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "fields": [
      {
        "name": "enabled"
      },
      {
        "name": "excludedUserAgents"
      },
      {
        "name": "mimeTypes"
      },
      {
        "name": "minResponseSize"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "fields": [
      {
        "name": "domain"
      },
      {
        "name": "httpOnly"
      },
      {
        "name": "maxAge"
      },
      {
        "name": "name"
      },
      {
        "name": "partitioned"
      },
      {
        "name": "path"
      },
      {
        "name": "sameSite"
      },
      {
        "name": "secure"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPartitioned",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPartitioned",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "fields": [
      {
        "name": "enabled"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "fields": [
      {
        "name": "bundle"
      },
      {
        "name": "certificate"
      },
      {
        "name": "certificatePrivateKey"
      },
      {
        "name": "ciphers"
      },
      {
        "name": "clientAuth"
      },
      {
        "name": "enabled"
      },
      {
        "name": "enabledProtocols"
      },
      {
        "name": "keyAlias"
      },
      {
        "name": "keyPassword"
      },
      {
        "name": "keyStore"
      },
      {
        "name": "keyStorePassword"
      },
      {
        "name": "keyStoreProvider"
      },
      {
        "name": "keyStoreType"
      },
      {
        "name": "protocol"
      },
      {
        "name": "serverNameBundles"
      },
      {
        "name": "trustCertificate"
      },
      {
        "name": "trustCertificatePrivateKey"
      },
      {
        "name": "trustStore"
      },
      {
        "name": "trustStorePassword"
      },
      {
        "name": "trustStoreProvider"
      },
      {
        "name": "trustStoreType"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerNameBundles",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServerNameBundles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletContextResourceFilePathResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "fields": [
      {
        "name": "charset"
      },
      {
        "name": "force"
      },
      {
        "name": "forceRequest"
      },
      {
        "name": "forceResponse"
      },
      {
        "name": "mapping"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "fields": [
      {
        "name": "className"
      },
      {
        "name": "initParameters"
      },
      {
        "name": "registered"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "fields": [
      {
        "name": "cookie"
      },
      {
        "name": "persistent"
      },
      {
        "name": "sessionStoreDirectory"
      },
      {
        "name": "storeDir"
      },
      {
        "name": "timeout"
      },
      {
        "name": "trackingModes"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStoreDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.ProtocolResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.ManagedTypes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Unpaged",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    }
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.DataAccessStrategy",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.IdGeneratingEntityCallback",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.JdbcConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.JdbcCustomConversions",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.ReadingDataAccessStrategy",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.convert.RelationResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.dialect.DialectResolver$DefaultDialectProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jdbc.core.dialect.DialectResolver$JdbcDialectProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jdbc.core.JdbcAggregateOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.JdbcAggregateTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration",
    "methods": [
      {
        "name": "idGeneratingBeforeSaveCallback",
        "parameterTypes": [
          "org.springframework.data.jdbc.core.mapping.JdbcMappingContext",
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
          "org.springframework.data.relational.core.dialect.Dialect"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jdbc.repository.support.JdbcRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jdbc.repository.support.SimpleJdbcRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractAuditable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.AbstractPersistable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.domain.support.AuditingEntityListener",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "char"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.util.HibernateProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.callback.EntityCallback",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.relational.auditing.RelationalAuditingCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.conversion.RelationalConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.dialect.Dialect",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.event.AfterConvertCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.event.AfterDeleteCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.event.AfterSaveCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.event.BeforeConvertCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.event.BeforeDeleteCallback",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.core.mapping.event.BeforeSaveCallback",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.relational.RelationalManagedTypes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.ProxyUtils$ProxyDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "settings"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": [ ]
      },
      {
        "name": "pageModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PageModelConverter",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule$PlainPageSerializationWarning",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    },
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "offsetResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "pageableResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebSettings",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.EnableSpringDataWebSupport"
    },
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PagedModel",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PagedModel$PageMetadata",
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.JdkClientHttpRequestFactory",
    "methods": [
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.ProblemDetailJacksonMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaType",
    "methods": [
      {
        "name": "getQualityValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.persistenceunit.PersistenceManagedTypes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "queriedMethods": [
      {
        "name": "createSharedEntityManager",
        "parameterTypes": [
          "jakarta.persistence.EntityManagerFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.SchedulingTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionRoot",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AbstractAuthenticationToken",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AccountExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationServiceException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.BadCredentialsException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.CredentialsExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DisabledException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.LockedException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationManagerBuilder",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "enableGlobalAuthenticationAutowiredConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeAuthenticationProviderBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeUserDetailsBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setGlobalAuthenticationConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAuthenticationConfiguration",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "setContentNegotiationStrategy",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationStrategy"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authorizedClientManagerRegistrar",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2ClientWebMvcSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.security.config.annotation.web.configuration.OAuth2ClientConfiguration$OAuth2AuthorizedClientManagerRegistrar"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.ObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationManagerPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "filterChainDecoratorPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webAuthorizationManagerPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "delegatingApplicationListener",
        "parameterTypes": [ ]
      },
      {
        "name": "privilegeEvaluator",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilterChainProxySecurityConfigurer",
        "parameterTypes": [
          "org.springframework.security.config.ObjectPostProcessor",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWebSecurityCustomizers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "springSecurityPathPatternParserBeanDefinitionRegistryPostProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "webSecurityExpressionHandler",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration$CompositeFilterChainProxy",
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.ObjectPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.oauth2.jwt.JwtDecoder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.oauth2.server.authorization.settings.AuthorizationServerSettings",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.expression.WebSecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.csrf.CsrfTokenRequestAttributeHandler$SupplierCsrfToken",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.MimeType",
    "fields": [
      {
        "name": "parameters"
      },
      {
        "name": "subtype"
      },
      {
        "name": "type"
      }
    ],
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isConcrete",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.request.AsyncWebRequestInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.request.WebRequestInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.PreFlightRequestHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.ServletRequestPathFilter",
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  }
]
